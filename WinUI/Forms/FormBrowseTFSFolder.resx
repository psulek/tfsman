<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAA4
        EQAAAk1TRnQBSQFMAgEBBAEAAQwBAAEMAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/ACoAAbEBoAGWAZQBgAFyAYgBcwFk
        AXwBZgFWAXMBWwFIAXABVwFEAW4BVAFAAWsBUQE9AY4BegFrKgABIgGpAUABLgGpAUkBEwGMAS1yAAGe
        AYcBfAHFAb0BtgHIAagBlwHHAaYBlQHHAaUBlAHGAaQBkgHGAaMBkgHGAaIBkAFlAUsBNxsAAd8BSwEG
        AdQBRwEEAdQBRwEEBgABKgG3AUkBhgHSAZYBGAGTATMBBAEcAdQBBAEcAdRsAAGgAYoBfwP/AfMB1wHJ
        AfIB1QHHAfIB1AHFAS4BzAEAATkBwQEAAccBpAGUAWkBTgE6CQABtwGiAZMBYwFJATUBYwFJATUBYwFJ
        ATUBYwFJATUBrQGfAZUB9AFVAQgB4wGZAWsB1AFHAgQBkQHUAQQBkQHUATUBwAFUAZcB2QGlASEBnQE9
        AXkBhwH2AQQBHAHUAXUBhAGPAWwBegGFAWABbQF3AVEBXQFmAUIBTAFUATEBOgFBASMBKgEwARYBHAEh
        AQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEYAQ4BEwEYAwABdQGEAY8BZgGAAY8BYAF5
        AYcBVwFuAXsBTgFiAW8BRAFWAWEBOQFIAVIBLgE6AUMBJQEuATUBGwEiASkBFAEZAR4BDgESARYBDgET
        ARgVAAHGAbkBswP/AfUB3gHTAfUB3QHRAfoB7gHpAS4BzAEAAS4BzAEAAcgBqAGYAWkBTgE6CQABtwGi
        AZMB/QH4AfYB4QHcAdgB4AHXAdIB3wHSAcoB5QHXAc8B/wFkARoB9gGqAYYB1gFKAQUBZgHNAf4BBAGR
        AdQBSAHFAWIBsQHiAbwBIQGfAT0BkAGcAfoBBQEbAdYBdwGHAZIBogHfAfABcAHNAeoBSQG4AeIBNwGu
        AdsBLQGpAdkBJgGhAdIBIQGYAccBIAGOAbwBHgGDAa4BGQF/AasBFQF8AakBGwF3AZ8BHwFyAZYBFgEc
        ASEDAAF3AYcBkgGJAaEBqwFqAbIB1AEAAY8BzQEAAY8BzQEAAY8BzQEEAYwBxwEIAYgBvgEPAYIBtAEV
        AXwBqQEbAXcBnwEfAXIBlgEiAUsBXAGbAa0BtRIAAbcBqAGeASIBqQFAAS4BqQFJARMBjAEtAfoB8AHr
        AfoB7wHqAfMB2AHMAcgBqwGbAW4BUwE/CQABtwGiAZMB/QH7AfkB/QH4AfYB/AH1AfIB+gHyAe0B+gHv
        AekB/wF4ATkB+gHDAacB6AFRAQgBhAHXAf4BBQGRAdYBTwHEAWgBxwHqAc4BJgGwAUQBogGrAfoBCAEg
        AegBegGKAZUBqgHoAfYBlQHlAfwBhAHfAfsBdQHWAfoBagHQAfcBXQHGAfQBUAG+AfABQQG0AewBNQGq
        AegBKwGkAeYBIAGaAd8BFgGQAdcBGwF3AZ8BIAEnAS0DAAF6AYoBlQF+Ab4B0wGKAaQBrgF+AdwB/wFf
        Ac8B/wFVAcsB/wFMAcQB+gFBAbwB9QE3AbMB8AEuAaoB6wEkAaAB5QETAYwB1AEjAWcBgAFeAWkBbQYA
        Ad8BSwEGAdQBRwEEAdQBRwEEAwABqQGWAYwBKgG3AUkBhgHSAZYBGAGTATMBBAEcAdQBBAEcAdQB+gHt
        AecByQGuAaABcgFYAUQJAAG3AaIBkwH+AvwB/gH6AfkB/QH4AfQB+wH0AfEB+wHxAewB/wGLAVMB/gHW
        AcIB/wFbAQ0BowHgAf4BCAGeAegBtwHbAa0BJAGlAUABWAGVAcgBvQHDAf4BDQEoAf8BfQGOAZgBsAHq
        AfYBnwHpAfsBkgHkAfwBgQHdAfsBdQHWAfoBaAHOAfcBXQHGAfQBTQG8AfABQQG0AewBNQGqAegBKgGj
        AeYBHQGWAdwBFQF8AakBLQE0ATsDAAF9AY4BmAF5AdIB7AGLAaQBrQGJAcIBzgFxAdgB/wFlAdMB/wFc
        Ac4B/wFRAckB/gFJAcEB+gE/AbkB9QE0AbAB7gEpAagB6QEQAYUBzQEiAUsBWwGyAcABxgMAAfQBVQEI
        AeMBmQFrAdQBRwIEAZEB1AEEAZEB1AE1AcABVAGXAdkBpQEhAZ0BPQF5AYcB9gEEARwB1AH4AekB4QHK
        AbABowF3AV0BSgkAAbcBogGTAf8D/gH9AfsB/QH6AfgB/QH3AfQB/AHzAfAB/QG/AaEB/wFtASUBmgGn
        AawBqwHjAf4BDQGxAf8BSAG7AWEBqQHbAbMBGgGeATcBJQE8Af8BrAG1Af8BgAGRAZwBtgHtAfgBqgHs
        AfsBmwHoAfsBjwHjAfwBgQHdAfsBcQHVAfkBaAHOAfcBWwHFAfQBTQG8AfABPQGyAewBMgGpAegBJAGe
        AeIBEAGCAbQBOwFDAUsDAAGAAZEBnAGBAdcB7wF9AcUB4AGMAaYBsAGAAd0B/gFoAdMB/wFnAdQB/wFi
        AdEB/wFYAc0B/wFOAccB/AFGAb4B9wE7AbYB8gExAawB7AElAWkBgQF6AZUBoQMAAf8BZAEaAfYBqgGG
        AdYBSgEFAWYBzQH+AQQBkQHUAUgBxQFiAbEB4gG8ASEBnwE9AZABnAH6AQUBGwHWA/8B8wHvAewBfAFj
        AVAJAAG6AaUBlgT/A/4B/AH7Af0B+QH3AfwB9gH0Af8BnQFpAf8BzAGzAf8BbgEoASIBswH7AdUB3wHj
        AcgB3gG7AUsBvQFmAUMBcQHSAZoBpQH/ASgBQAH/AYMBlQGfAb4B8AH5AasB8AH3AaUB7AH7AZgB5wH7
        AYkB4QH8AX8B3QH7AXEB1QH5AWUBzQH3AVgBxAHzAUsBuwHwAT0BsgHsASwBpAHjAQwBigG/AUkBUwFc
        AwABgwGVAZ8BiQHcAfEBjAHiAf8BjQGoAbEBjAG6AccBdAHYAf8BZwHUAf8BZwHUAf8BZwHUAf8BXwHQ
        Af8BVAHNAf8BSwHFAfwBQQG7AfcBLgGiAdsBUQFnAXQBsgHAAcYB/wF4ATkB+gHDAacB6AFRAQgBhAHX
        Af4BBQGRAdYBTwHEAWgBxwHqAc4BJgGwAUQBogGrAfoBCAEgAegB2AHPAckBkQF6AWkBgQFpAVYJAAG+
        AakBmgf/Af4B/QH+AfwB+gH9AfgB9wH9AcEBpAH/AZoBZQGmAacBqwGzAeYB/wEeAa0B8wH3AeUB3AHh
        AdcBzwGdAaUB7gE4AUsB9AGrAbQB/wGGAZkBowG+AfAB+QG2Ae0B+AGwAe4B+gGkAesB+gGVAeYB+wGJ
        AeEB/AF9AdwB/AFxAdUB+QFlAc0B9wFYAcQB8wFJAbkB7wE1AakB5wEMAY8BxwFXAWMBawMAAYYBmgGj
        AZIB4QHyAZgB6AH9AYABxAHeAY4BpwGwAYEB3gH9AYQB4AH/AYQB4AH/AYQB4AH/AYQB4AH/AYEB3wH/
        AXsB3QH/AXQB2AH/AWsB1gH/AVYBqQHRAY8BmwGkAf8BiwFTAf4B1gHCAf8BWwENAaMB4AH+AQgBngHo
        Ab0B7gHIASQBpQFAAVgBlQHIAb0BwwH+AQ0BKAH/AfsB8wHvAc0BuQGuAYcBbwFdCQABwwGuAZ4K/wL9
        Af4B+wH6Af0B+QH3AfwB9QHyAakB3AH1AVIBvgH3AacB2AHwAfgB6AHhAd4B0gHKAbYBqQGgBgABiQGc
        AaYBvgHwAfkBtgHtAfgBtgHtAfgBqwHwAfcBogHsAfoBlQHmAfsBiQHhAfwBfQHcAfwBbwHTAfoBYwHM
        AfcBVQHDAfMBSQG5Ae8BGQGZAc8BYwFwAXoDAAGIAZwBpQGaAeYB8wGfAesB+wGYAegB/gGLAawBuQGL
        AawBuQGKAaoBtwGIAaYBswGGAaMBrwGDAZ8BqgGBAZoBpgF/AZUBoQF8AZEBnQF6AY4BmQF5AYsBlQF3
        AYgBkwH/AccBrAH/AW0BJQGaAacBrAGrAeMB/gENAbEB/wFIAbsBYQGpAdsBswEaAZ4BNwElATwB/wGs
        AbUH/wGZAYgBfQkAAcgBsgGjCf8E/gH9AfwB/QH7AfkB/QH4AfUB/AH1AfEB+wHyAe0B+gHuAekB+QHq
        AeQB1gHHAb0BYwFJATUGAAGLAaABqAG+AfAB+QG+AfAB+QG+AfAB+QG+AfAB+QG0AfIB+AGqAewB+wGg
        AekB+wGVAeUB/AGKAd8B/AF/AdgB+wF0AdIB+AFoAcoB9AFdAcAB8QFjAXABegMAAYsBoAGoAaAB6gH2
        AaYB7gH5AZ8B6wH7AZgB6AH+AXoB2gH/AWcB1AH/AWcB1AH/AWcB1AH/AWcB1AH/AWcB1AH/AWcB1AH/
        AXcBiAGTCQAB/wGdAWkB/wHMAbMB/wFuASgBIgGzAfsBrAG6AcEBugHXAbUBSwG9AWYBYwGcAccBmgGl
        Af8BKAFAAf8B6QHkAeABnwGIAXgBnwGIAXgJAAHMAbYBpw7/Av4C/AH+AfoB+QH9AfcB9QH7AfQB8QH7
        AfEB7QH6Ae4B6AH5AeoB4wFjAUkBNQYAAY0BoQGqAY0BoQGqAY0BoQGqAY0BoQGqAY0BoQGqAYsBnwGo
        AYkBnAGmAYkBmwGmAYcBmgGkAYYBmQGjAYQBlgGgAYQBlgGgAYMBlQGgAYMBlQGgAXUBhAGPAwABjgGi
        AasBpwHuAfYBqwHwAfcBpgHuAfkBnwHrAfsBmAHoAf0BcQHUAfsBiQGeAacBhgGZAaMBggGUAZ8BfgGQ
        AZoBegGMAZcBdwGIAZMJAAH/AcYBqwH/AZoBZQGmAacBqwGzAeYB/wEeAa0B8wb/AasBtAH+AWUBcwH/
        AaoBsQH7AfoB7wHqAdcBuQGqAa8BnwGVCQAB6gGqAYsB6gGqAYsB6gGqAYsB6QGlAYQB6QGfAXoB5wGX
        AW4B5gGOAWIB5QGGAVYB4wF9AUoB4wF2AUAB4gFyATkB4gFyATkB4gFyATkByAFiAS8GAAGPAaQBrAGy
        AeQB7AG2Ae0B+AG2Ae0B+AGpAewB9gGSAeEB8wGNAaEBqhsAAY8BpAGsAaAB0gHaAasB8AH3AasB8AH3
        AaYB7gH5AZ8B6wH7AY0BoQGqIQABqwHkAf8BUgG+AfcBjwHDAdwD/A//AeEB3AHYAb4BrAGfCQAB6gGq
        AYsB/wHCAaIB/gHAAZ8B/QG9AZoB/AG5AZYB+wG1AZAB+gGwAYsB+QGrAYQB+AGnAX0B9gGiAXcB9QGd
        AXEB9QGZAWoB8wGVAWUBzQFlATEJAAGPAaQBrAGPAaQBrAGPAaQBrAGPAaQBrAGPAaQBrCEAAY8BpAGs
        AY8BpAGsAY8BpAGsAY8BpAGsAY8BpAGsKgAB8gHxAfAB2gHWAdMBwgG6AbUBvQGzAa0BuAGtAacBuQGt
        AacBuQGtAacBtgGpAaEB0QHGAcAJAAHqAaoBiwHqAaoBiwHqAaoBiwHqAaoBiwHqAaYBhgHpAaEBfwHo
        AZsBdgHnAZQBbAHmAY4BYgHlAYcBWAHkAYEBTgHkAXsBRgHjAXYBPgHiAXIBOf8AJwABQgFNAT4HAAE+
        AwABKAMAAUADAAEgAwABAQEAAQEGAAEBFgAD/4EAAfABBwH/AeME/wHwAQcB/AFgBP8B8AEHAwABAQEA
        AQcB8AEHAwABAQEAAQMB8AEHAwABAQEAAQMBEAEHAwABAQEAAQEBAAEHAwABAQEAAQEBAAEHAwABAQMA
        AQcDAAEBAwABBwEAAQMBAAEBAwABBwEAAQMBAAEBAQABBwEAAQcBAAEDAQABAQEAAQcBAAEHAQABAwEB
        Af8BAQH/AcABBwEAAQMBgwH/AYMB/wHwAQcBAAEDDP8L
</value>
  </data>
  <metadata name="QueryPathTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>221, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAQAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8BAHD/RQBw/6kAcP/jAHD/qQBw/y////8B////Af///wH///8BAHD/RQBw/6kAcP/jAHD/qQBw
        /y////8BAHD/RQBw//MAcP/zAHD/8wBw//MAcP/zAHD/L////wH///8BAHD/RQBw//MAcP/zAHD/8wBw
        //MAcP/zAHD/LwBw/68AcP/zh7z/+e71//9vrv/5AHD/8wBw/6EAcP/ZAHD/3wBw/68AcP/zh7z/+e71
        //9vrv/5AHD/8wBw/48AcP/nAHD/8/T5////////1Of//QBw//MAcP/zAHD/8wBw//MAcP/zAHD/8/T5
        ////////1Of//QBw//MAcP/HAHD/rwBw//N1sv/51+n//V2k//ccgP/zq9D/++Xw///r9P//tNX/+yKD
        //V1sv/51+n//V2k//cAcP/zAHD/jwBw/zMAcP/zAHD/8wBw//MZfv/z6/T/////////////////////
        ///x9///JoX/9QBw//MAcP/zAHD/5QBw/x3///8BAHD/MwBw/6UAcP/zq9D/+///////////////////
        /////////////7rY//sAcP/zAHD/swBw/x3///8B////Af///wEAcP/fAHD/8+v0////////////////
        ///////////////////5/P//AHD/8wBw/+3///8B////Af///wH///8BAHD/3wBw//Pr9P//////////
        ////////////////////////+fz//wBw//MAcP/t////Af///wH///8BAHD/RQBw/6kAcP/zosv/+///
        /////////////////////////////7HT//sAcP/zAHD/swBw/y////8BAHD/RQBw//MAcP/zAHD/8xl+
        //Pr9P////////////////////////H3//8ig//1AHD/8wBw//MAcP/zAHD/LwBw/68AcP/zh7z/+e71
        //9vrv/5HID/86jO//vj7//95fD//67S//sig//1h7z/+e71//9vrv/5AHD/8wBw/48AcP/nAHD/8/T5
        ////////1Of//QBw//MAcP/zAHD/8wBw//MAcP/zAHD/8/T5////////1Of//QBw//MAcP/HAHD/rwBw
        //N1sv/51+n//V2k//cAcP/zAHD/nwBw/9cAcP/ZAHD/rwBw//N1sv/51+n//V2k//cAcP/zAHD/jwBw
        /zMAcP/zAHD/8wBw//MAcP/zAHD/5QBw/x3///8B////AQBw/zMAcP/zAHD/8wBw//MAcP/zAHD/5QBw
        /x3///8BAHD/MwBw/5EAcP/LAHD/kQBw/x3///8B////Af///wH///8BAHD/MwBw/5EAcP/LAHD/kQBw
        /x3///8BAAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA//8AAP//AAD//wAA
        //8AAP//AAD//w==
</value>
  </data>
</root>