<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADS
        BwAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDOQAAVkBZAGdAS4BOAF6ASgBMAFvAU0BUQGBJAABNgFsAUMBKAFXATIBJgFS
        ATABLwFgATt+AAFHAVwBqwEXATYBpgEKATIBtQECATEBwwECATABwgEFASoBqgEIAR8BhAEsATIBbRgA
        ATwBeAFIATIBgAFFASsBhwFFASQBjQFCAR4BiQE9ARsBewE2AR0BaQEyASkBWAEzdQABMQFOAbEBDwE5
        Ab0BAAEzAdEBAAEzAc8BAAEzAc4BAAEyAcsBAAEyAcsBAAEyAcsBAwEmAaEBEAEaAWUSAAFJAZABVwFG
        AaABXQE/AaIBWgE2AZ0BUgEtAZcBSwElAZIBRAEfAY4BPgEZAYoBOgEYAX4BNgEjAWUBNW8AAVEBaQHA
        ARMBPgHIAQABNwHgAQABNwHiAQABNwHgAQABNQHcAQABNQHWAQABMwHPAQABMgHLAQABMgHLAQMBJgGh
        ASwBMgFtDAABUQGUAVoBWwGuAW4BVgGxAW0BTAGrAWQBQgGkAVwBOQGfAVUBMAGZAU0BKAGUAUcBIQGP
        AUEBGgGLATwBGQF/ATYBKgFcATVsAAEmAUwBxQEAATsB7wEAATwB9AH8Af4C/AH+AfwBRwFyAfMBOwFn
        AewB/AH+AvwB/gH8AQABMgHLAQABMgHLAQgBHwGEDAABXwGqAWwBbQG/AYEBYwG5AXgBWgGzAXAD/wFG
        AaYBYAE8AaABVwEzAZsBUAErAZYBSAEjAZEBQwEcAYwBPQEfAW4BNWkAAXABhgHQARgBSAHgAQUBQwH/
        AQwBSAH/AXYBmAH+AfwB/gL8Af4C/AH+AvwB/gH8AV8BggHrAQABNAHTAQABMgHLAQUBKgGqAU0BUQGB
        BgABZQGtAW4BeQHDAYcBeQHHAYsBcAHBAYMJ/wFJAakBYgE/AaIBWgE2AZwBUgEtAZgBSwElAZIBRQEh
        AYEBPAE0AWgBQGYAAU8BawHHAUoBcwH5AUsBeAH/AS8BYwH/ASgBXQH/AbIBxgH9AfwB/gL8Af4B/AGd
        AbYB/QEAAToB7QEAATYB3QEAATMBzwECATABwgEoATABbwYAAVgBpwFhAZkB3AGlAY0B1QGdBv8BSAGe
        AVQG/wFMAasBZQFDAaUBXQE5AZ4BVQEwAZkBTgEoAY8BRQEtAV8BN2YAAVEBbQHKAVMBewH5AVcBgAH/
        AVEBewH/AUEBcAH/AbEBxQH9AfwB/gL8Af4B/AGlAbsB/QEAAT0B+gEAATkB5wEAATUB1gECATEBwwEu
        ATgBegYAAVwBrgFlAacB5wGyAaEB4wGuAUgBngFUAUgBngFUAXYBxQGIAUgBngFUBv8BTwGtAWcBRgGn
        AWABPAGgAVgBMwGXAU8BMgFmATtmAAFzAYsB1wFSAXcB7AFnAY0B/wFvAZIB/wGVAa8B/gH8Af4C/AH+
        AvwB/gL8Af4B/AFxAZQB/gEAATsB7wEAATUB3AELATIBtgFZAWQBnQYAAXABvQF3AZoB3QGlAbAB7gG8
        AaIB4wGwAZIB1wGgAYIBzQGSAXkBxwGLAUgBngFUBv8BUwGuAWoBSAGoAWIBPQGWAVQBQgF9AU1pAAFH
        AWsB3AF3AZgB/wGGAaMB/wH8Af4C/AH+AfwBgwGhAf4BegGbAf4B/AH+AvwB/gH8AQABPAH0AQABNwHg
        ARgBNwGnDAABgQHNAYsBtwH0AcMBsAHvAbwBpAHlAbABlAHZAaIBhQHOAZQBfAHJAY0BSAGeAVQG/wFW
        AbEBbQFEAZEBVWwAAWIBfgHYAVoBfQHtAYcBpQH/AZcBsAH/AX0BnQH/AVgBgQH/AUEBcAH/ASgBXQH/
        AQ8BSQH/AQABPQH2ARIBPAHHAUcBXAGrDAABbgHBAXYBoAHjAawBtwH0AcMBsQHvAb0BpQHlAbIBlgHa
        AaMBhwHQAZYBfwHKAY8BSAGeAVQBSAGeAVQBXgGxAXEBTAGOAVZvAAFTAXMB2AFcAX8B7AF8AZwB/wGH
        AaQB/wF7AZsB/wFjAYkB/wEsAWAB/wEMAUgB/wEXAUQB1QE0AVABshIAAXsBygGDAaEB4wGsAbcB9AHD
        AbEB7wG9AaYB5gGzAZgB3AGlAYkB0QGZAYIBzQGSAXIBvwGCAVwBpAFodQABYwGAAdgBTwFxAd4BUQF3
        AewBVwF/AfoBUgF6AfgBLwFcAeYBLAFSAcwBUgFrAcEYAAFwAcMBdwGCAc8BjAGaAd8BpQGpAekBtQGg
        AeIBrAGHAc4BkgFwAboBewFfAakBaH4AAXMBiwHXAVEBbQHKAU8BawHHAXABhgHQJAABcwHEAXsBYgG4
        AWkBYAG1AWcBcAG7AXf/ADMAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAT/
        BAAB/AE/AfwBPwQAAfABDwHwAQ8EAAHgAQcB4AEHBAABwAEDAcABAwQAAcABAwHAAQMEAAGAAQEBgAEB
        BAABgAEBAYABAQQAAYABAQGAAQEEAAGAAQEBgAEBBAABwAEDAcABAwQAAcABAwHAAQMEAAHgAQcB4AEH
        BAAB8AEPAfABDwQAAfwBPwH8AT8EAAT/BAAL
</value>
  </data>
</root>